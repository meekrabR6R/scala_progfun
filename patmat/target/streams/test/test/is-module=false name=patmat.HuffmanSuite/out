[0m[[0minfo[0m] [0m[32mHuffmanSuite:[0m[0m
[0m[[0minfo[0m] [0m[32m- weight of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- weight of another large tree[0m[0m
[0m[[0minfo[0m] [0m[32m- chars of a larger tree[0m[0m
[0m[[0minfo[0m] [0m[32m- chars of another large tree[0m[0m
[0m[[0minfo[0m] [0m[32m- string2chars("hello, world")[0m[0m
[0m[[0minfo[0m] [0m[32m- times for a List of chars[0m[0m
[0m[[0minfo[0m] [0m[32m- times for a null List[0m[0m
[0m[[0minfo[0m] [0m[32m- makeOrderedLeafList for some frequency table[0m[0m
[0m[[0minfo[0m] [0m[32m- singleton checks if List[CodeTree] contains only a single code tree[0m[0m
[0m[[0minfo[0m] [0m[32m- combine of some leaf list[0m[0m
[0m[[0minfo[0m] [0m[32m- until singleton returns tree[0m[0m
[0m[[0minfo[0m] [0m[32m- newly created tree[0m[0m
[0m[[0minfo[0m] [0m[32m- decoded secret has a length of 14 chars[0m[0m
[0m[[0minfo[0m] [0m[32m- decoded secret is 'huffmanestcool'[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode a very short text should be identity[0m[0m
[0m[[0minfo[0m] [0m[32m- blah[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and encode 'huffmanestcool'[0m[0m
[0m[[0minfo[0m] [0m[32m- decode and quick-encode 'huffmanestcool'[0m[0m
